language: c
os: linux
dist: trusty
sudo: true
addons:
compiler:
  - gcc
before_script:
  - echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial main" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial universe" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates universe" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates multiverse" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://security.ubuntu.com/ubuntu xenial-security main" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://security.ubuntu.com/ubuntu xenial-security multiverse" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update -qq
  - sudo apt-get install build-essential libtool autotools-dev automake libmicrohttpd-dev bsdmainutils
  - sudo apt-get install libcurl4-gnutls-dev nettle-dev libjson-c-dev libuv1-dev libscrypt-dev
  - sudo apt-get install cmake
#  - wget https://github.com/linux-test-project/lcov/releases/download/v1.13/lcov-1.13.tar.gz
#  - tar -zxvf lcov-1.13.tar.gz
#  - cd lcov-1.13
#  - sudo make install
#  - cd -
  - mkdir /tmp/genaro-test
  - export TMPDIR=/tmp/genaro-test/
script:
  - git clone https://github.com/bitcoin-core/secp256k1.git ~/secp256k1
  - cd ~/secp256k1
  - ./autogen.sh
  - ./configure
  - make
  - sudo make install
  - cd -
  - git clone https://github.com/maandree/libkeccak.git ~/libkeccak
  - cd ~/libkeccak
  - make
  - sudo make install
  - cd -
  - sed -i 's/SET(STATIC.*)/SET(STATIC 1)/' CMakeLists.txt
#  - sed -i 's/SET(COVERAGE.*)/SET(COVERAGE 1)/' CMakeLists.txt
  - sed -i 's/target_link_libraries(genaro m z idn2 .*)/target_link_libraries(genaro m libsecp256k1.a libscrypt.a libkeccak.a libgmp.a)/' CMakeLists.txt
  - sed -i 's/target_link_libraries(genaroeden-cli genaro libcurl.a .*)/target_link_libraries(genaroeden-cli genaro m libuv.a libjson-c.a libnettle.a curl libsecp256k1.a libscrypt.a libkeccak.a libgmp.a)/' CMakeLists.txt
  - sed -i 's/target_link_libraries(tests genaro gcrypt .*)/target_link_libraries(tests genaro libuv.a libjson-c.a libnettle.a curl microhttpd)/' CMakeLists.txt
  - sed -i 's/target_link_libraries(test_crypto genaro)/target_link_libraries(test_crypto genaro libnettle.a)/' CMakeLists.txt
  - mkdir build
  - cd build
  - cmake ..
  - make
  - ./tests
  - ./tests_rs
# after_success:
#   # Creating report
#   - lcov --directory . --capture --output-file coverage.info # capture coverage info
#   - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
#   - lcov --list coverage.info #debug info
#   # Uploading report to CodeCov
#   - export CODECOV_TOKEN="xxxxxxxxxxxx"
#   - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
